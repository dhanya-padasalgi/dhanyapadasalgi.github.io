[{"content":"Introduction Now that I know about Computer Understanding, I now have become familiar with Learning and its types.\nThis post will discuss an overview about the Learning Types. All the algorithms that are used to achieve learning of different types is discussed in the Algorithm Post.\nWhat are the Learning Types? There are 4 types of learning that happen in a machine. They are:\nSupervised Learning Unsupervised Learning Semi-Supervised Learning Reinforcement Learning Each of them is chosen based on the type of data (structured or unstructured) and the task (classification, clustering, etc.). They have unique requirements and implementations.\nI will try to describe each of these learning techniques using a real-life comparison to organizing my closet.\nSupervised Learning What is Supervised Learning? By definition, Supervised Learning is:\n\u0026ldquo;Learning with labeled data where the model learns to map inputs to outputs based on given examples.\u0026rdquo;\nIt uses structured data (also called labeled data) to learn the pattern or relationship between the features and outputs.\nIt is one of the most used and preferred learning types as it makes it easy for machines to learn, and the output is predictable.\nAnalogy When I am trying to organize my closet, my mom has already labeled all my clothes as “Shirts,” “Skirts,” “Pants,” etc. So I just place all of them in different sections. Now, when I buy a new item, I will find a label that best suits this new item and add it into that section.\nWhen is Supervised Learning used? Supervised Learning requires structured data to train.\nThese are the tasks that require Supervised Learning:\nClassification: Assigning labels to data.\nExample: Spam and no-spam classification for email. Regression: Predicting continuous values.\nExample: Predicting house prices based on features like size and location. Time Series Forecasting: Predicting future values based on historical data.\nExample: Stock price forecasting. Unsupervised Learning What is Unsupervised Learning? By definition, Unsupervised Learning is:\n\u0026ldquo;Learning from unlabeled data to discover hidden patterns or structures.\u0026rdquo;\nIt uses unstructured data (also known as unlabeled data) and tries to group this data based on observed patterns or logic.\nAnalogy When arranging clothes in my closet, I have no idea what each item of clothing is. I will try and pile the clothes into different groups based on parameters like length, color, fabric, etc. Now, when I get a new piece of clothing, I will try to add it to the group that it is most similar to.\nWhen is Unsupervised Learning used? Unsupervised Learning runs on unstructured data.\nThese are the tasks that require Unsupervised Learning:\nClustering: Grouping similar data points together.\nExample: Customer segmentation in marketing. Dimensionality Reduction: Reducing the number of features while preserving essential information.\nExample: Principal Component Analysis (PCA) for visualizing high-dimensional data. Anomaly Detection: Identifying outliers or unusual patterns.\nExample: Detecting fraudulent transactions. Semi-Supervised Learning What is Semi-Supervised Learning? By definition, Semi-Supervised Learning is:\n\u0026ldquo;A hybrid approach that uses a small amount of labeled data along with a larger amount of unlabeled data.\u0026rdquo;\nIt uses a combination of structured and unstructured data to infer patterns.\nAnalogy My closet would have a few labeled items—e.g., “Shirt,” “Pant”—but most of it is unlabeled. I use the labeled items as a guide and figure out the categories for the rest based on similarity to the labeled examples. Now, when I buy a new item, I will try to associate it with the category closest to it and try to label it as well.\nWhen is Semi-Supervised Learning used? These are the tasks that require Semi-Supervised Learning:\nClassification with Limited Labels: Improving classification accuracy by leveraging unlabeled data.\nExample: Recognizing handwritten digits with a few labeled samples. Data Label Propagation: Assigning labels to unlabeled data using patterns derived from labeled data.\nExample: Labeling parts of a medical image for diagnosis. Reinforcement Learning What is Reinforcement Learning? By definition, Reinforcement Learning is:\n\u0026ldquo;Learning through trial and error by interacting with an environment to maximize cumulative rewards.\u0026rdquo;\nIn this type, learning happens through interaction and feedback to maximize rewards. The data is labeled based on the response received.\nAnalogy When organizing the closet, my mom is standing behind me. Every time I arrange an item right, she appreciates me, and every time it is not, she either does not react or scolds me. This makes a clear pattern of when I’m being rewarded and penalized. Now, when I buy a new item, I will choose my action based on my inference from the pattern.\nWhen is Reinforcement Learning used? These are the tasks that require Reinforcement Learning:\nGame Playing: Teaching AI to play games like chess or Go.\nExample: AlphaGo defeating human champions. Robotics: Teaching robots to perform tasks like walking or grasping objects.\nExample: A robot learning to navigate through a warehouse. Control Systems: Optimizing processes or systems over time.\nExample: Self-driving cars learning to adjust speed and steering based on surroundings. Personalization: Recommending content or adjusting strategies dynamically.\nExample: Online recommendation systems adapting to user preferences. How do the Learning Types differ from each other? Feature Supervised Learning Unsupervised Learning Semi-Supervised Learning Reinforcement Learning Input Data Labeled data (input-output pairs). Unlabeled data. Mix of labeled and unlabeled data. Interaction with an environment. Goal Predict outputs. Discover hidden patterns. Improve accuracy. Maximize rewards. Tasks Classification, regression, time series forecasting. Clustering, anomaly detection, dimensionality reduction. Classification with limited labels, data labeling propagation. Game playing, robotics, self-driving cars, personalized recommendations. Nature of Feedback Direct and explicit (labeled outputs). No feedback; patterns are inferred. Feedback for labeled data; inferred guidance for unlabeled data. Feedback via rewards or penalties. ","permalink":"http://localhost:40421/posts/learning-types/","summary":"Types of Learning- Supervised, Unsupervised, Semi-Supervised and Reinforcement Learning","title":"Types of Learning"},{"content":"Introduction Before trying to check if computers are capable of perceiving the world at a human level, I wanted to learn about the current and developing mechanism (or methodology) that is helping these machines to become human-like.\nHere is the first of the many posts about the deconstruction of these methods.\nWhat is “Computer Understanding\u0026quot;? When we say understanding in general, we mean the capability of someone to interpret, reason, and derive meaning from context. Applying the same to computer understanding would mean - a machine’s ability to analyze, comprehend, and infer from data (context for us, data for them).\nWhy do Computers need to Understand? Simple answer - for AI.\nThe definition of AI is mimicking human behavior. It\u0026rsquo;s a field that aims to create machines that can replicate humans in both thought and movement.\nArtificial Intelligence makes life easier for the simple reason that it does the things that we do (at least the part of it we don\u0026rsquo;t want to do). And to complete those tasks, it needs to make sense of the world we live in.\nIn basic words, a machine is like the new kid in your class. To be a part of your class, they have to observe and adapt to the existing routines your class has. They have to “understand and learn” before they become a working part of it.\nHow do Computers Understand? What makes a man perfect? Plain response - practice makes man perfect. So then what makes a machine perfectly human? The answer is simple: through practice. This practice is what everyone calls Training.\nNow how exactly does this training happen? By two ways:\nRule-Based Systems Learning-Based Systems Rule-Based System How does Rule-Based Training work? A specific set of rules is predefined by someone for the machine to learn from. The machine considers the posed request (or query) against this list of rules and performs the action as mentioned in the matching case.\nWhat are these Rules? The rules are mostly in the form of \u0026ldquo;if-then statements\u0026rdquo;, i.e., \u0026ldquo;If so-and-so-situation then perform such-and-such-action\u0026rdquo;.\nThese rules are defined in such a way that every possible scenario within the domain has been considered and has a very Explicit Rule associated with it. This means the person writing these rules is a domain expert who knows what they are doing.\nLearning-Based System How does Learning-Based Systems work? Learning-based systems work by leveraging Machine Learning techniques.\nA Machine Learning Model that has learned from data makes predictions of what could be the possible answer to the posed request (or query). There is no explicit rule mentioning actions; rather, there is a relation between variables.\nTypes of Learning There are different types of learning based on how the data is provided and what is the task that needs to be completed. These types are:\nSupervised Learning Unsupervised Learning Semi-Supervised Learning Reinforcement Learning These have been discussed in detail here.\nWhat is Machine Learning? Machine Learning is a mechanism through which machines learn patterns and make inferences (for data). There are no explicit rules; rather, there are pointers and formulas that help machines identify the pattern.\nA Machine Learning Model is created using the learned patterns that use its knowledge to predict the answer.\nWhat is a Machine Learning Model? A model identifies trends and makes a relation between defining variables and predicting variables using modifiable parameters.\nIn simple words, it is like an equation maker that interprets how different input factors influence the outcome factors.\nA simple example being the line equation y = mx + c. Considering the line equation on the above definition:\nDefining variable is x Predicting variable is y Modifiable parameters are m and c How to make a Model? Technically, a model is made by passing Data through Algorithm. The internal working of a model is a black box, but a basic idea of what happens is presented here.\nThe model identifies patterns from the data using algorithms. It then forms a formula (or at least an expression) for the relation between the elements. This helps it make predictions when given unseen (but bounded—we will see about zero-shot learning later) queries.\nWhat is an Algorithm? An algorithm is the method to learn from data. It is a general outline (relation) based on the type of pattern that needs to be identified. The parameters of the relation are defined and revised based on the algorithm logic.\nMore about this is discussed here. Link to Another Post\nComparing the Two Systems Extending the new kid example from above, we can understand the two systems better:\nThe class monitor makes a list of do’s and don\u0026rsquo;ts and gives it to the new kid. Every time they have to interact with someone, they go back to the list and see what action they have to perform. This is a Rule-Based System. The kid mingles around, observes the other kids in the class, and makes inferences from their behavior. Now, when they have to interact with someone, they use their own knowledge and take appropriate action. This is a Learning-Based System. There could be situations where Rule based would be better than Learning based. When there needs to be a perfect action such as greeting the teacher with their name, then the first option ensures that the names are not mixed up, because the actions are fixed.\nThere also are situations where Learning based is better than Rule based. When there is a need to face a new situation that neither they nor their classmates have encountered, such as a guest arriving at their class. Now an appropriate greeting has to be done based on how they have greeted the others until now.\nSituational Comparisons Rule-Based Advantages:\nDeterministic actions for every situation. Very easy to follow and trace back. Rule-Based Disadvantages:\nCannot handle situations outside the predefined scenario-action set. Requires human expertise and intervention for modification of logic or data. Learning-Based Advantages:\nAutomation, no need for human expertise and intervention for modification of logic or data. Scalable to huge amounts of data. Learning-Based Disadvantages:\nRequires a good amount of data and computational power to work well. Patterns are not easily human-interpretable and traceable. By weighing the advantages and disadvantages, we can understand that learning-based systems are better suited for today\u0026rsquo;s needs.\nConclusion The entire blog can be summarized in these two sentences:\nMachine understanding is a goal for achieving Artificial Intelligence-equipped computers. Machine understanding happens through Machine Learning. ","permalink":"http://localhost:40421/posts/computer-undersatnding/","summary":"Learning computer\u0026rsquo;s approch to making sense of the world. Basics of Rule Based and Learning Based Systems with primary idea about Algorithms and Models.","title":"Computer Understanding??"}]